# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
#ZSH_THEME="bira"
#ZSH_THEME="juanghurtado"
#ZSH_THEME="junkfood"
ZSH_THEME="smt"

# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Comment this out to disable weekly auto-update checks
# DISABLE_AUTO_UPDATE="true"

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
COMPLETION_WAITING_DOTS="true"

is_linux () {
    [[ $('uname') == 'Linux' ]];
}

is_osx () {
    [[ $('uname') == 'Darwin' ]]
}

command_exists () {
    type "$1" &> /dev/null;
}

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
USER_PLUGINS=(git sublime rsync themes urltools)

if  is_osx; then
    if command_exists brew; then
        USER_PLUGINS+=(brew)
    fi
    if command_exists node; then
        USER_PLUGINS+=(node npm)
    fi
else
    USER_PLUGINS+=(command-not-found)
fi

if command_exists phing; then
    USER_PLUGINS+=(phing)
fi

if command_exists composer; then
    USER_PLUGINS+=(composer)
fi

if command_exists pip; then
    USER_PLUGINS+=(pip)
fi

if command_exists git-extras; then
    USER_PLUGINS+=(git-extras)
fi

if command_exists rbenv; then
    # ZSH rbenv plugin doesn't work on not Mac OS so doing it manually
    # export PATH="$HOME/.rbenv/bin:$PATH"
    # eval "$(rbenv init -)"
    USER_PLUGINS+=(rbenv)
fi

USER_PLUGINS+=(zsh-syntax-highlighting)
plugins=($USER_PLUGINS)

# Enable highlighters - https://coderwall.com/p/qmvfya
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets pattern)

# Override highlighter colors
ZSH_HIGHLIGHT_STYLES[default]=none
ZSH_HIGHLIGHT_STYLES[unknown-token]=fg=009
ZSH_HIGHLIGHT_STYLES[reserved-word]=fg=009,standout
ZSH_HIGHLIGHT_STYLES[alias]=fg=white,bold
ZSH_HIGHLIGHT_STYLES[builtin]=fg=white,bold
ZSH_HIGHLIGHT_STYLES[function]=fg=white,bold
ZSH_HIGHLIGHT_STYLES[command]=fg=white,bold
ZSH_HIGHLIGHT_STYLES[precommand]=fg=white,underline
ZSH_HIGHLIGHT_STYLES[commandseparator]=none
ZSH_HIGHLIGHT_STYLES[hashed-command]=fg=009
ZSH_HIGHLIGHT_STYLES[path]=fg=214,underline
ZSH_HIGHLIGHT_STYLES[globbing]=fg=063
ZSH_HIGHLIGHT_STYLES[history-expansion]=fg=white,underline
ZSH_HIGHLIGHT_STYLES[single-hyphen-option]=none
ZSH_HIGHLIGHT_STYLES[double-hyphen-option]=none
ZSH_HIGHLIGHT_STYLES[back-quoted-argument]=none
ZSH_HIGHLIGHT_STYLES[single-quoted-argument]=fg=063
ZSH_HIGHLIGHT_STYLES[double-quoted-argument]=fg=063
ZSH_HIGHLIGHT_STYLES[dollar-double-quoted-argument]=fg=009
ZSH_HIGHLIGHT_STYLES[back-double-quoted-argument]=fg=009
ZSH_HIGHLIGHT_STYLES[assign]=none

# Customize to your needs...
export PATH=/usr/lib/lightdm/lightdm:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games
source $ZSH/oh-my-zsh.sh

# From: http://askubuntu.com/questions/1577/moving-from-bash-to-zsh
#autoload -U compinit
compinit

for func in $^fpath.zwc(N-.r:); autoload -U -w $func

setopt completeinword

zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}'

zstyle ':completion:*:killall:*' command 'ps -u $USER -o cmd'

autoload select-word-style
select-word-style shell

alias ll='ls -l'
alias la='ls -a'

HISTFILE=~/.zhistory
HISTSIZE=SAVEHIST=15000
setopt incappendhistory
setopt sharehistory
setopt extendedhistory

# superglobs
setopt extendedglob
unsetopt caseglob
unsetopt nomatch 2>/dev/null

setopt interactivecomments # pound sign in interactive prompt

setopt auto_cd

if is_linux; then
    alias 'a=sudo apt-get'
    alias 'ai=sudo apt-get install'
    alias 'ar=sudo apt-get remove'
    alias 'au=sudo apt-get update'
    alias 'ag=sudo apt-get safe-upgrade'
    alias 'as=apt-cache search'
    alias 'aw=apt-cache show'
    alias 'ad=sudo apt-get dist-upgrade'
elif  is_osx; then
    # Mac OS X related aliases here
fi

function apt-list-packages {
  dpkg-query -W --showformat='${Installed-Size} ${Package} ${Status}\n' | grep -v deinstall | sort -n | awk '{print $1" "$2}'
}

# TMUX
if [[ "$TERM" != "screen-256color" ]] && [[ "$SSH_CONNECTION" == "" ]]; then
#if [[ -z $TMUX ]]; then
    # Attempt to discover a detached session and attach it, else create a new session
    CURRENT_USER=$(whoami)
    if tmux has-session -t $CURRENT_USER 2>/dev/null; then
        tmux -2 attach-session -t $CURRENT_USER
    else
        tmux -2 new-session -s $CURRENT_USER
    fi
else
    # If inside tmux session then print MOTD
    MOTD=/etc/motd.tcl
    if [ -f $MOTD ]; then
        $MOTD
    fi
fi
